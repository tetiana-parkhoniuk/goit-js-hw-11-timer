{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","selector","start","setInterval","currentTime","Date","now","deltaTime","timeComponents","getTimeComponents","updateCountdownTimerFace","time","days","pad","Math","floor","hours","mins","secs","value","String","padStart","document","querySelector","children","textContent","newCountdownTimer"],"mappings":";;;AAwCA,aAxCA,QAAA,oBAEA,MAAMA,EACFC,aAAY,WAAEC,EAAF,SAAcC,IACjBA,KAAAA,SAAWA,EACXD,KAAAA,WAAaA,EACbE,KAAAA,QAGTA,QACIC,YAAY,KACFC,MAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKP,WAAaI,EAC9BI,EAAiB,KAAKC,kBAAkBF,GAEzCG,KAAAA,yBAAyBF,IAC/B,KAGPC,kBAAkBE,GAMX,MAAA,CAAEC,KALI,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAK1BK,MAJD,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CM,KAHT,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCO,KAFf,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAKvDE,IAAIM,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGtCX,0BAAyB,KAAEE,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IAC1CI,SAASC,cAAc,KAAKtB,UAAWuB,SAAS,GAAGA,SAAS,GAAGC,YAAcb,EAC7EU,SAASC,cAAc,KAAKtB,UAAWuB,SAAS,GAAGA,SAAS,GAAGC,YAAcT,EAC7EM,SAASC,cAAc,KAAKtB,UAAWuB,SAAS,GAAGA,SAAS,GAAGC,YAAcR,EAC7EK,SAASC,cAAc,KAAKtB,UAAWuB,SAAS,GAAGA,SAAS,GAAGC,YAAcP,GAIrF,MAAMQ,EAAoB,IAAI5B,EAAe,CACzCG,SAAU,WACVD,WAAY,IAAIK,KAAK","file":"src.c73ead35.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n    constructor({ targetDate, selector }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.start();\n    }\n\n    start() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const timeComponents = this.getTimeComponents(deltaTime);\n\n            this.updateCountdownTimerFace(timeComponents);\n        }, 1000);\n    }\n\n    getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n    }\n    \n     pad(value) {\n         return String(value).padStart(2, '0');\n    }\n    \n    updateCountdownTimerFace({ days, hours, mins, secs }) {\n        document.querySelector(this.selector,).children[0].children[0].textContent = days;\n        document.querySelector(this.selector,).children[1].children[0].textContent = hours;\n        document.querySelector(this.selector,).children[2].children[0].textContent = mins;\n        document.querySelector(this.selector,).children[3].children[0].textContent = secs;\n    }\n}\n\nconst newCountdownTimer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('June 13, 2021'),\n})\n\n"]}